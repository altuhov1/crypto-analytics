services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: cryptodb
    volumes:
      - ./docker/postgres/init-scripts:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - internal

  mongodb:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: mongosecret
      MONGO_INITDB_DATABASE: cryptodb
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-scripts:/docker-entrypoint-initdb.d:ro
      - mongodb_logs:/var/log/mongodb
    command: >
      mongod --quiet --logpath /var/log/mongodb/mongod.log --logappend
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - internal
  app:
    networks:
      - internal
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  caddy:
    image: caddy:2-alpine
    ports:
      - "3000:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./static:/usr/share/caddy
      - caddy_logs:/var/log/caddy
    depends_on:
      - app
    networks:
      - internal
      - public

networks:
  internal:
    internal: true  
  public:

volumes:
  postgres_data:
  mongodb_data:
  caddy_logs:
  mongodb_logs:
